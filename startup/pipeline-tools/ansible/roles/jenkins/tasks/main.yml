
    - name: "Make sure Jenkins is stopped"
      service:
        name: "jenkins"
        state: "stopped"
        enabled: "true"
      ignore_errors: yes

    - name: "Create Jenkins group"
      group:
        name: "{{ jenkins_group }}"
        state: present

    - name: "Create Jenkins user"
      user: name="{{ jenkins_user }}" groups="{{ jenkins_group }}" state="present"

    - name: add jenkins to the docker group
      user: name=jenkins
            groups=docker
            append=yes

    - name: "Enable amazon-linux-extras for java-11"
      command: "amazon-linux-extras enable java-openjdk11"

    - name: "Install prerequisites"
      yum:
        name: [
              java-11-openjdk-headless,
              git,
              groovy,
              gcc-c++,
              make,
              python2-pip,
              jq,
              curl
              ]
        state: "present"

    - name: "install needed python modules"
      pip:
        virtualenv_python: python3.5
        name:
          - python-jenkins
          - lxml

    - name: "Add Jenkins repository"
      get_url:
        url: "http://pkg.jenkins-ci.org/redhat/jenkins.repo"
        dest: "/etc/yum.repos.d/jenkins.repo"

    - name: "Import Jenkins key"
      command: "rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key"
      args:
        warn: no

    - name: "Install Jenkins"
      yum:
        name: jenkins-2.192-1.1
        state: present

    - name: Set JENKINS_HOME
      lineinfile:
        create: "yes"
        dest: "/etc/sysconfig/jenkins"
        line: "JENKINS_HOME={{ jenkins_home }}"
        regexp: '^JENKINS_HOME='
        state: "present"

    - name: makes sure JENKINS_HOME exists
      file:
        path: "{{ jenkins_home }}//init.groovy.d"
        state: directory
        mode: 0644
        owner: "{{ jenkins_user }}"
        group: "{{ jenkins_group }}"

    - name: "Set JENKINS_ARGS"
      lineinfile:
        dest: /etc/sysconfig/jenkins
        regexp: '^JENKINS_ARGS='
        line: "JENKINS_ARGS=\"{{ jenkins_java_opts }}\""

    - name: "Set Jenkins java options"
      lineinfile:
        dest: /etc/sysconfig/jenkins
        regexp: '^JAVA_ARGS='
        line: "JAVA_ARGS=\"{{ jenkins_java_opts }}\""

    - name: start with wide-open config (config.xml)
      template:
        src: "config.xml"
        dest: "{{ jenkins_home }}/config.xml"
        mode: 0644
        owner: "{{ jenkins_user }}"
        group: "{{ jenkins_group }}"

    - name: "Add NPM and Yarn repositories"
      shell: |
        curl -sL https://rpm.nodesource.com/setup_11.x | sudo -E bash -
        curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo


    - name: "install NPM and Yarn"
      yum:
        name: [
              nodejs,
              yarn
              ]
        state: "present"

    - name: "install OpenShift Binaries"
      shell: |
        curl -L https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz -o oc.tar.gz
        tar --strip-components 1 -xzf oc.tar.gz
        mv oc /usr/local/bin/
        mv kubectl /usr/local/bin/

    - name: "Start Jenkins"
      service: name="jenkins" state="started"

    - name: "Wait for Jenkins to come up"
      uri:
        url: "{{ jenkins_url }}:{{ jenkins_port }}"
        status_code: 200,404
      register: result
      until: result.status == 200
      retries: 60
      delay: 5

    - include_tasks: "configure-plugins.yml"

    - name: get token from sonar
      shell: "curl -u admin:{{ sonarqube_pass }} -s -X POST {{sonar}}:9000/api/user_tokens/generate?name=jenkins | jq -r .token"
      register: sonar_token

    - debug:
        var: sonar_token

    - name: add configuration as code file
      template:
        src: "jenkins.yaml"
        dest: "{{ jenkins_home }}/jenkins.yaml"
        mode: 0644
        owner: "{{ jenkins_user }}"
        group: "{{ jenkins_group }}"


    - name: "restart Jenkins"
      service:
        name: "jenkins"
        state: "restarted"
        enabled: "true"


    - name: "Wait for Jenkins to come up"
      uri:
        url: "{{ jenkins_url }}:{{ jenkins_port }}"
        status_code: 200,404
      register: result
      until: result.status == 200
      retries: 60
      delay: 5

    - include_tasks: "configure-jobs.yml"

    - name: Display all variables/facts known for a host
      debug:
        var: hostvars[inventory_hostname]
        verbosity: 4
