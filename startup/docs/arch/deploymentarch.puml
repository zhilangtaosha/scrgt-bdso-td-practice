@startuml DeploymentView

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v4.0/dist
!includeurl AWSPuml/AWSCommon.puml

' Uncomment the following line to create simplified view
'!includeurl AWSPuml/AWSSimplified.puml

!includeurl AWSPuml/General/Users.puml
!includeurl AWSPuml/Mobile/APIGateway.puml
!includeurl AWSPuml/SecurityIdentityAndCompliance/Cognito.puml
!includeurl AWSPuml/Compute/Lambda.puml
!includeurl AWSPuml/Database/DynamoDB.puml
!includeurl AWSPuml/Analytics/ElasticsearchService.puml
!includeurl AWSPuml/Database/Neptune.puml
!includeurl AWSPuml/Database/RDS.puml
!includeurl AWSPuml/Storage/S3Bucket.puml
!includeurl AWSPuml/MachineLearning/MachineLearning.puml
!includeurl AWSPuml/MachineLearning/SageMakerNotebook.puml
!includeurl AWSPuml/GroupIcons/Cloud.puml

!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.1.0
!includeurl ICONURL/common.puml
!includeurl ICONURL/font-awesome/server.puml
!includeurl ICONURL/font-awesome-5/list.puml
!includeurl ICONURL/dev2/angularjs.puml
!includeurl ICONURL/dev2/java.puml
!includeurl ICONURL/dev2/python.puml
!include ICONURL/devicons/github.puml
!include ICONURL/devicons/jenkins.puml
skinparam componentStyle uml2
left to right direction

Users(users, "User", "Access BDSO.Celebrity")

FA5_LIST(celebrityList, "Top Celebrities")
Users(devsecops, "DevSecOps", "DevSecOps")
DEV_GITHUB(github, "Github")
FA_SERVER(dockerHub,dockerHub)
Cloud "AWS Account" {

  node "Openshift" #LightPink {
    DEV2_ANGULARJS(frontend,Front End) #BlueViolet
    DEV2_JAVA(celebrityMS,Celebrity Microservice) 
    DEV2_PYTHON(modelMS,Model Microservice) 
    ElasticsearchService(searchDb, "Search Database (AWS ElasticSearch)", "one entry per celebrity")
    Cognito(userAuth, "User Authentication (Keycloak)", "jwt to submit votes")
  }
  node "JupiterHub" #Gray {
    MachineLearning(MatchingProcessor, "Facial Recognition", "AI/ML")
    MachineLearning(celebrityRecommendation, "Celebrity recommendation", "AI/ML")
    SageMakerNotebook(datascienceNotebook, "Datascience Notebook", "Model development")
  }
  RDS(celebrityDB, "Celebrity Database(RDS Postgres)", "celebrity BIO")

  SageMakerNotebook(celebrityScrapper, "Scrape Celebrity Info", "Celebrity content")
  S3Bucket(scrappedContent, "Celebrity Content", "Images, content ")



  node "DevOps" #LightSeaGreen {
    DEV_JENKINS(jenkins, "Jenkins")
    FA_SERVER(sonarQube,SonarQube)
  } 

devsecops <--> github
github <-->jenkins
jenkins <--> dockerHub
jenkins <--> sonarQube
users <--> userAuth
users <--> frontend


celebrityMS <--> celebrityDB
celebrityList --> celebrityScrapper
celebrityScrapper --> scrappedContent

scrappedContent --> celebrityMS
frontend --> celebrityMS
frontend --> modelMS
searchDb <--> modelMS
frontend <--> searchDb

datascienceNotebook --> MatchingProcessor
datascienceNotebook --> celebrityRecommendation
celebrityRecommendation <--> modelMS
@enduml

