# server config
# Define a custom SSL port instead of the default 8080
server.port=8080

#security config
security.enabled=${SECURITY_ENABLED:false}

## Database config
spring.datasource.platform=postgres

spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:demo}
spring.datasource.username=${DB_USERNAME:app_user}
spring.datasource.password=${DB_PASSWORD:app_user}

## liquibase
spring.liquibase.enabled=true

## Avoid hibernate error: createClob() is not yet implemented
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.properties.hibernate.show_sql=false

## OpenApi config
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.default-property-inclusion=non_null
springfox.documentation.swagger.v2.path=/v2/api-docs

spring.profiles.active=local

## OAuth2
security.issuer-uri=${KECLOAK_URL:https://keycloak-dev.ocp.bdso.salientcrgt-bdso.com/auth/realms/bdso}
security.oauth2.resource.id=celebrity-api
security.oauth2.resource.token-info-uri=${security.issuer-uri}/protocol/openid-connect/token/introspect
security.oauth2.resource.user-info-uri=${security.issuer-uri}/protocol/openid-connect/userinfo
security.oauth2.resource.jwk.key-set-uri=${security.issuer-uri}/protocol/openid-connect/certs

management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true

## S3 Bucket
aws.use-credentials=true
aws.bucket=${AWS_S3_BUCKET:bdso-celebrity-content-dev}
aws.access-key=${AWS_ACCESS_KEY_ID:}
aws.secret-key=${AWS_SECRET_ACCESS_KEY:}
aws.region=${AWS_REGION:us-east-2}

## Elastic Search
spring.data.elasticsearch.cluster-name=${ES_CLUSTER:elasticsearch}
spring.data.elasticsearch.cluster-nodes=${ES_HOST:localhost}:${ES_PORT:9300}
spring.elasticsearch.rest.uris=${ES_HOST:localhost}:${ES_HC_PORT:9200}
