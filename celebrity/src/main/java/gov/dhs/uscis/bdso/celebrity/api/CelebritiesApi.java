/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package gov.dhs.uscis.bdso.celebrity.api;

import gov.dhs.uscis.bdso.celebrity.model.Celebrity;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "celebrities", description = "the celebrities API")
public interface CelebritiesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Get Celebrity By ID", nickname = "findCelebrityById", notes = "Returns A Celebrity information by id.", response = Celebrity.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns Celebrity Information", response = Celebrity.class),
        @ApiResponse(code = 500, message = "An unexpected error occured.") })
    @RequestMapping(value = "/celebrities/{celebrityId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Celebrity> findCelebrityById(@ApiParam(value = "Celebrity Id",required=true) @PathVariable("celebrityId") Integer celebrityId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"lastName\" : \"lastName\",  \"image\" : \"image\",  \"totalBoxOffice\" : 1.4658129805029452,  \"imdbId\" : \"imdbId\",  \"nickName\" : \"nickName\",  \"biography\" : \"biography\",  \"birthName\" : \"birthName\",  \"firstName\" : \"firstName\",  \"birthPlace\" : \"birthPlace\",  \"movdbId\" : \"movdbId\",  \"totalSalary\" : 2.3021358869347655,  \"dob\" : \"2000-01-23\",  \"genres\" : [ null, null ],  \"popularity\" : 6,  \"averageBoxOffice\" : 5.962133916683182,  \"imageUrl\" : \"imageUrl\",  \"averageSalary\" : 7.061401241503109,  \"id\" : 0,  \"age\" : 5,  \"filmography\" : {    \"movies\" : [ {      \"overview\" : \"overview\",      \"releaseDate\" : \"2000-01-23\",      \"imdbId\" : \"imdbId\",      \"runtime\" : 1,      \"language\" : \"language\",      \"title\" : \"title\",      \"originalLanguage\" : \"originalLanguage\",      \"homePage\" : \"homePage\",      \"cast\" : [ {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      }, {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      } ],      \"revenue\" : 1.2315135367772556,      \"companies\" : [ {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      }, {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      } ],      \"movdbId\" : \"movdbId\",      \"originalTitle\" : \"originalTitle\",      \"genres\" : [ null, null ],      \"popularity\" : 7,      \"tagline\" : \"tagline\",      \"spokenLanguages\" : \"spokenLanguages\",      \"ranking\" : 1,      \"id\" : 2,      \"budget\" : 4.145608029883936,      \"status\" : \"status\"    }, {      \"overview\" : \"overview\",      \"releaseDate\" : \"2000-01-23\",      \"imdbId\" : \"imdbId\",      \"runtime\" : 1,      \"language\" : \"language\",      \"title\" : \"title\",      \"originalLanguage\" : \"originalLanguage\",      \"homePage\" : \"homePage\",      \"cast\" : [ {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      }, {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      } ],      \"revenue\" : 1.2315135367772556,      \"companies\" : [ {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      }, {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      } ],      \"movdbId\" : \"movdbId\",      \"originalTitle\" : \"originalTitle\",      \"genres\" : [ null, null ],      \"popularity\" : 7,      \"tagline\" : \"tagline\",      \"spokenLanguages\" : \"spokenLanguages\",      \"ranking\" : 1,      \"id\" : 2,      \"budget\" : 4.145608029883936,      \"status\" : \"status\"    } ],    \"numberOfMovies\" : 3,    \"listOfMoviesByYear\" : [ {      \"year\" : 5,      \"movieCount\" : 9    }, {      \"year\" : 5,      \"movieCount\" : 9    } ],    \"ranking\" : 9  },  \"height\" : \"height\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Retrieve all celebrities.", nickname = "getCelebrities", notes = "Retrieve all celebrity information.", response = Celebrity.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of celebrities.", response = Celebrity.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Resource was not found"),
        @ApiResponse(code = 500, message = "An unexpected error occured.") })
    @RequestMapping(value = "/celebrities",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Celebrity>> getCelebrities() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"lastName\" : \"lastName\",  \"image\" : \"image\",  \"totalBoxOffice\" : 1.4658129805029452,  \"imdbId\" : \"imdbId\",  \"nickName\" : \"nickName\",  \"biography\" : \"biography\",  \"birthName\" : \"birthName\",  \"firstName\" : \"firstName\",  \"birthPlace\" : \"birthPlace\",  \"movdbId\" : \"movdbId\",  \"totalSalary\" : 2.3021358869347655,  \"dob\" : \"2000-01-23\",  \"genres\" : [ null, null ],  \"popularity\" : 6,  \"averageBoxOffice\" : 5.962133916683182,  \"imageUrl\" : \"imageUrl\",  \"averageSalary\" : 7.061401241503109,  \"id\" : 0,  \"age\" : 5,  \"filmography\" : {    \"movies\" : [ {      \"overview\" : \"overview\",      \"releaseDate\" : \"2000-01-23\",      \"imdbId\" : \"imdbId\",      \"runtime\" : 1,      \"language\" : \"language\",      \"title\" : \"title\",      \"originalLanguage\" : \"originalLanguage\",      \"homePage\" : \"homePage\",      \"cast\" : [ {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      }, {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      } ],      \"revenue\" : 1.2315135367772556,      \"companies\" : [ {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      }, {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      } ],      \"movdbId\" : \"movdbId\",      \"originalTitle\" : \"originalTitle\",      \"genres\" : [ null, null ],      \"popularity\" : 7,      \"tagline\" : \"tagline\",      \"spokenLanguages\" : \"spokenLanguages\",      \"ranking\" : 1,      \"id\" : 2,      \"budget\" : 4.145608029883936,      \"status\" : \"status\"    }, {      \"overview\" : \"overview\",      \"releaseDate\" : \"2000-01-23\",      \"imdbId\" : \"imdbId\",      \"runtime\" : 1,      \"language\" : \"language\",      \"title\" : \"title\",      \"originalLanguage\" : \"originalLanguage\",      \"homePage\" : \"homePage\",      \"cast\" : [ {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      }, {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      } ],      \"revenue\" : 1.2315135367772556,      \"companies\" : [ {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      }, {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      } ],      \"movdbId\" : \"movdbId\",      \"originalTitle\" : \"originalTitle\",      \"genres\" : [ null, null ],      \"popularity\" : 7,      \"tagline\" : \"tagline\",      \"spokenLanguages\" : \"spokenLanguages\",      \"ranking\" : 1,      \"id\" : 2,      \"budget\" : 4.145608029883936,      \"status\" : \"status\"    } ],    \"numberOfMovies\" : 3,    \"listOfMoviesByYear\" : [ {      \"year\" : 5,      \"movieCount\" : 9    }, {      \"year\" : 5,      \"movieCount\" : 9    } ],    \"ranking\" : 9  },  \"height\" : \"height\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Update a celebrity.", nickname = "updateCelebrity", notes = "Updates an existing celebrity's data.", response = Celebrity.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Celebrity successfully updated.", response = Celebrity.class),
        @ApiResponse(code = 500, message = "An unexpected error occured.") })
    @RequestMapping(value = "/celebrities",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Celebrity> updateCelebrity(@ApiParam(value = "Celebrity data." ,required=true )  @Valid @RequestBody Celebrity celebrity) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"lastName\" : \"lastName\",  \"image\" : \"image\",  \"totalBoxOffice\" : 1.4658129805029452,  \"imdbId\" : \"imdbId\",  \"nickName\" : \"nickName\",  \"biography\" : \"biography\",  \"birthName\" : \"birthName\",  \"firstName\" : \"firstName\",  \"birthPlace\" : \"birthPlace\",  \"movdbId\" : \"movdbId\",  \"totalSalary\" : 2.3021358869347655,  \"dob\" : \"2000-01-23\",  \"genres\" : [ null, null ],  \"popularity\" : 6,  \"averageBoxOffice\" : 5.962133916683182,  \"imageUrl\" : \"imageUrl\",  \"averageSalary\" : 7.061401241503109,  \"id\" : 0,  \"age\" : 5,  \"filmography\" : {    \"movies\" : [ {      \"overview\" : \"overview\",      \"releaseDate\" : \"2000-01-23\",      \"imdbId\" : \"imdbId\",      \"runtime\" : 1,      \"language\" : \"language\",      \"title\" : \"title\",      \"originalLanguage\" : \"originalLanguage\",      \"homePage\" : \"homePage\",      \"cast\" : [ {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      }, {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      } ],      \"revenue\" : 1.2315135367772556,      \"companies\" : [ {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      }, {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      } ],      \"movdbId\" : \"movdbId\",      \"originalTitle\" : \"originalTitle\",      \"genres\" : [ null, null ],      \"popularity\" : 7,      \"tagline\" : \"tagline\",      \"spokenLanguages\" : \"spokenLanguages\",      \"ranking\" : 1,      \"id\" : 2,      \"budget\" : 4.145608029883936,      \"status\" : \"status\"    }, {      \"overview\" : \"overview\",      \"releaseDate\" : \"2000-01-23\",      \"imdbId\" : \"imdbId\",      \"runtime\" : 1,      \"language\" : \"language\",      \"title\" : \"title\",      \"originalLanguage\" : \"originalLanguage\",      \"homePage\" : \"homePage\",      \"cast\" : [ {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      }, {        \"firstName\" : \"firstName\",        \"lastName\" : \"lastName\",        \"nickName\" : \"nickName\",        \"celebrityId\" : 7,        \"roleName\" : \"roleName\",        \"movieId\" : 1,        \"id\" : 6      } ],      \"revenue\" : 1.2315135367772556,      \"companies\" : [ {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      }, {        \"companyName\" : \"companyName\",        \"description\" : \"description\",        \"id\" : 4      } ],      \"movdbId\" : \"movdbId\",      \"originalTitle\" : \"originalTitle\",      \"genres\" : [ null, null ],      \"popularity\" : 7,      \"tagline\" : \"tagline\",      \"spokenLanguages\" : \"spokenLanguages\",      \"ranking\" : 1,      \"id\" : 2,      \"budget\" : 4.145608029883936,      \"status\" : \"status\"    } ],    \"numberOfMovies\" : 3,    \"listOfMoviesByYear\" : [ {      \"year\" : 5,      \"movieCount\" : 9    }, {      \"year\" : 5,      \"movieCount\" : 9    } ],    \"ranking\" : 9  },  \"height\" : \"height\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
